function Monster.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 217
pop this 0
push constant 23
pop this 1
push constant 20
pop this 2
push pointer 0
call Monster.createMonster 1
pop temp 0
push pointer 0
return
function Monster.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Monster.createMonster 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Monster.updateMonster 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 3
push this 0
call Math.multiply 2
push constant 23
add
pop this 0
push constant 3
push this 1
call Math.multiply 2
push constant 54
add
pop this 1
label WHILE_EXP0
push this 0
push constant 388
push this 2
sub
gt
not
if-goto WHILE_END0
push this 0
push constant 388
push this 2
sub
sub
pop this 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push this 1
push constant 255
push this 2
sub
gt
not
if-goto WHILE_END1
push this 1
push constant 255
push this 2
sub
sub
pop this 1
goto WHILE_EXP1
label WHILE_END1
push pointer 0
call Monster.createMonster 1
pop temp 0
push constant 0
return
function Monster.move 1
push argument 0
pop pointer 0
push argument 1
push constant 7
call Math.divide 2
pop local 0
label WHILE_EXP0
push local 0
push constant 99
gt
not
if-goto WHILE_END0
push local 0
push constant 100
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 1000
add
push constant 997
call Math.divide 2
pop argument 1
label WHILE_EXP1
push argument 1
push constant 4
gt
not
if-goto WHILE_END1
push argument 1
push constant 4
sub
pop argument 1
goto WHILE_EXP1
label WHILE_END1
push argument 1
push constant 1
sub
pop argument 1
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 1
push this 2
add
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 1
sub
pop this 1
label IF_FALSE2
label IF_FALSE1
push argument 1
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push constant 388
push this 2
sub
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
push this 1
push this 0
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 1
add
pop this 0
label IF_FALSE4
label IF_FALSE3
push argument 1
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
push constant 255
push this 2
sub
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push this 1
push this 0
push this 2
add
push this 1
call Screen.drawRectangle 4
pop temp 0
push this 1
push constant 1
add
pop this 1
label IF_FALSE6
label IF_FALSE5
push argument 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
push constant 0
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 0
push this 2
add
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 1
sub
pop this 0
label IF_FALSE8
label IF_FALSE7
push pointer 0
call Monster.createMonster 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Monster.x 0
push argument 0
pop pointer 0
push this 0
return
function Monster.y 0
push argument 0
pop pointer 0
push this 1
return
function Monster.size 0
push argument 0
pop pointer 0
push this 2
return
